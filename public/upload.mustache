<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>Upload</title>
		<link rel="stylesheet" href="/style.css">
		<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
	</head>
	<body class="scroll-enabled">
		{{> header}}
    {{#error_messages}}
      {{>error_message}}
    {{/error_messages}}
    {{#info_messages}}
      {{>info_message}}
    {{/info_messages}}
		<div class="center">
      <select name="location" id="dropdown">
        <option value="garching">Garching</option>
        <option value="heilbronn">Heilbronn</option>
      </select>
      <p>Click on the map to select a coordinate</p>
			<div id="mapEmbed">
				<div id="map"></div>
			</div>
      <form action="upload" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="location" value="garching" id="location">
        <input type="hidden" name="lat" id="lat">
        <input type="hidden" name="long" id="long">

        <button type="button" onclick="triggerInput(true)">📷 Take Picture</button>
        <button type="button" onclick="triggerInput(false)">🖼️ Select Picture</button>
        <input id="imageInput" name="image" type="file" accept="image/jpeg,image/png" required hidden>

        <hr>
        <label for="agree">
          I have read and agreed to the <a href="/upload/guideline">Upload Guideline</a>.
          <input name="agree" type="checkbox" id="agree" required>
        </label><br>

        <input type="submit" value="Upload Image" disabled>
      </form>

      <script>
        function triggerInput(capture) {
            const input = document.getElementById('imageInput');
            if (capture) {
                input.setAttribute('capture', 'environment');
            } else {
                input.removeAttribute('capture');
            }
            input.click();
        }
      </script>
		</div>
		<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
		<script>
		 const latitudeInput = document.getElementById('lat');
		 const longitudeInput = document.getElementById('long');
		 const fileInput = document.querySelector('input[name="image"]');
		 const submitButton = document.querySelector('input[type="submit"]');
     const agreed = document.querySelector('input[type="checkbox"]');
     const dropdown = document.getElementById('dropdown');
     const hidden = document.getElementById('location');
     dropdown.addEventListener('change', () => {
       hidden.value = dropdown.value;
       if(dropdown.value == "heilbronn") {
         map.panTo([49.1475, 9.2137]);
       } else {
         map.panTo([48.2621, 11.6676]);
       }
     });
     hidden.value = dropdown.value;
     
		 function validateForm() {
			 const lat = parseFloat(latitudeInput.value);
			 const lng = parseFloat(longitudeInput.value);
			 const hasCoords = !isNaN(lat) && !isNaN(lng);
			 const hasFile = fileInput.files.length > 0;
       const hasAgreed = agreed.checked;

			 submitButton.disabled = !(hasCoords && hasFile && hasAgreed);
		 }

		 fileInput.addEventListener('change', validateForm);
		 agree.addEventListener('change', validateForm);
		 
		 const map = L.map('map').setView([48.2621, 11.6676], 16);
		 L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			 attribution: '© OpenStreetMap contributors'
		 }).addTo(map);
		 
		 let marker = null;

		 map.on('click', function(e) {
			 const lat = e.latlng.lat.toFixed(6);
			 const lng = e.latlng.lng.toFixed(6);

			 updateMarker(lat, lng);
			 
			 document.getElementById('lat').value = lat;
			 document.getElementById('long').value = lng;

			 const form = document.querySelector('form');
			 validateForm();
		 });

		 function updateMarker(lat, lng) {
			 const latlng = L.latLng(lat, lng);
			 if (marker) {
				 marker.setLatLng(latlng);
			 } else {
				 marker = L.marker(latlng).addTo(map);
			 }
			 map.panTo(latlng);
		 }
		 
		 ['lat', 'long'].forEach(id => {
			 const input = document.getElementById(id);
			 document.getElementById(id).addEventListener('input', () => {
				 const lat = parseFloat(document.getElementById('lat').value);
				 const lng = parseFloat(document.getElementById('long').value);
				 if (!isNaN(lat) && !isNaN(lng)) {
					 updateMarker(lat, lng);
					 validateForm();
				 }
			 });
			 input.addEventListener('keydown', (e) => {
				 if (e.key === 'Enter') {
					 e.preventDefault();
				 }
			 });
		 });
		</script>
		<script>
		</script>
	</body>
</html>
